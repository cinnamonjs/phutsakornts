{
  "version": 3,
  "sources": ["../../i18next-fetch-backend/index.js"],
  "sourcesContent": ["const defaults = {\n  loadPath: '/locales/{{lng}}/{{ns}}.json',\n  addPath: '/locales/add/{{lng}}/{{ns}}',\n  multiSeparator: '+',\n  allowMultiLoading: false,\n  fetch: typeof fetch === 'undefined' ? undefined : fetch,\n  parse: JSON.parse,\n  stringify: JSON.stringify,\n  requestOptions: {},\n};\n\nconst arrify = (val) => (Array.isArray(val) ? val : [val]);\nconst normalize = (funcOrVal, ...args) => (typeof funcOrVal === 'function' ? funcOrVal(...args) : funcOrVal);\n\nclass BackendError extends Error {\n  retry = null;\n\n  constructor(message, retry = false) {\n    super(message);\n\n    this.retry = retry;\n  }\n}\n\nexport default class Backend {\n  constructor(services, options) {\n    this.init(services, options);\n  }\n\n  type = 'backend';\n\n  static type = 'backend';\n\n  init(services, options = {}) {\n    this.services = services;\n\n    this.options = {\n      ...defaults,\n      ...this.options,\n      ...options,\n    };\n  }\n\n  getLoadPath(languages, namespaces) {\n    return normalize(this.options.loadPath, languages, namespaces);\n  }\n\n  read(language, namespace, callback) {\n    const loadPath = this.getLoadPath(language, namespace);\n    const url = this.services.interpolator.interpolate(loadPath, { lng: language, ns: namespace });\n\n    this.loadUrl(url, callback);\n  }\n\n  readMulti(languages, namespaces, callback) {\n    const loadPath = this.getLoadPath(languages, namespaces);\n    const { multiSeparator } = this.options;\n\n    const url = this.services.interpolator.interpolate(loadPath, {\n      lng: languages.join(multiSeparator),\n      ns: namespaces.join(multiSeparator),\n    });\n\n    this.loadUrl(url, callback);\n  }\n\n  loadUrl(url, callback) {\n    const { fetch, requestOptions, parse } = this.options;\n\n    fetch(url, requestOptions)\n      .then((response) => {\n        const { ok, status } = response;\n\n        if (!ok) {\n          const retry = status >= 500 && status < 600; // don't retry for 4xx codes\n\n          throw new BackendError(`failed loading ${url}`, retry);\n        }\n\n        return response.text();\n      }, () => {\n        throw new BackendError(`failed loading ${url}`);\n      })\n      .then((data) => {\n        try {\n          return callback(null, parse(data, url));\n        } catch {\n          throw new BackendError(`failed parsing ${url} to json`, false);\n        }\n      })\n      .catch((e) => {\n        if (e instanceof BackendError) {\n          callback(e.message, e.retry);\n        }\n      });\n  }\n\n  create(languages, namespace, key, fallbackValue) {\n    const payload = {\n      [key]: fallbackValue || '',\n    };\n\n    arrify(languages).forEach((lng) => {\n      const {\n        addPath,\n        requestOptions,\n        fetch,\n        stringify,\n      } = this.options;\n\n      const url = this.services.interpolator.interpolate(addPath, { lng, ns: namespace });\n\n      try {\n        fetch(url, {\n          method: 'POST',\n          body: stringify(payload),\n          ...requestOptions,\n        });\n      } catch (e) {\n        console.error(e); // eslint-disable-line no-console\n      }\n    });\n  }\n}\n"],
  "mappings": "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",
  "names": ["fetch"]
}

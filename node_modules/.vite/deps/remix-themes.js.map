{
  "version": 3,
  "sources": ["../../remix-themes/dist/index.js"],
  "sourcesContent": ["// src/theme-provider.tsx\nimport {\n  createContext,\n  useCallback as useCallback3,\n  useContext,\n  useEffect as useEffect2,\n  useMemo,\n  useState\n} from \"react\";\n\n// src/useBroadcastChannel.ts\nimport { useCallback, useEffect, useRef } from \"react\";\nfunction useBroadcastChannel(channelName, handleMessage, handleMessageError) {\n  const channelRef = useRef(\n    typeof window !== \"undefined\" && \"BroadcastChannel\" in window ? new BroadcastChannel(`${channelName}-channel`) : null\n  );\n  useChannelEventListener(channelRef, \"message\", handleMessage);\n  useChannelEventListener(channelRef, \"messageerror\", handleMessageError);\n  return useCallback((data) => {\n    var _a;\n    (_a = channelRef == null ? void 0 : channelRef.current) == null ? void 0 : _a.postMessage(data);\n  }, []);\n}\nfunction useChannelEventListener(channelRef, event, handler = () => {\n}) {\n  useEffect(() => {\n    const channel = channelRef.current;\n    if (channel) {\n      channel.addEventListener(event, handler);\n      return () => channel.removeEventListener(event, handler);\n    }\n  }, [event, handler]);\n}\n\n// src/useCorrectCssTransition.ts\nimport { useCallback as useCallback2 } from \"react\";\nfunction withoutTransition(callback) {\n  const css = document.createElement(\"style\");\n  css.appendChild(\n    document.createTextNode(\n      `* {\n       -webkit-transition: none !important;\n       -moz-transition: none !important;\n       -o-transition: none !important;\n       -ms-transition: none !important;\n       transition: none !important;\n    }`\n    )\n  );\n  document.head.appendChild(css);\n  callback();\n  setTimeout(() => {\n    const _ = window.getComputedStyle(css).transition;\n    document.head.removeChild(css);\n  }, 100);\n}\nfunction useCorrectCssTransition({\n  disableTransitions = false\n} = {}) {\n  return useCallback2(\n    (callback) => {\n      if (disableTransitions) {\n        withoutTransition(() => {\n          callback();\n        });\n      } else {\n        callback();\n      }\n    },\n    [disableTransitions]\n  );\n}\n\n// src/theme-provider.tsx\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nvar Theme = /* @__PURE__ */ ((Theme2) => {\n  Theme2[\"DARK\"] = \"dark\";\n  Theme2[\"LIGHT\"] = \"light\";\n  return Theme2;\n})(Theme || {});\nvar themes = Object.values(Theme);\nvar ThemeContext = createContext(void 0);\nThemeContext.displayName = \"ThemeContext\";\nvar prefersLightMQ = \"(prefers-color-scheme: light)\";\nvar getPreferredTheme = () => window.matchMedia(prefersLightMQ).matches ? \"light\" /* LIGHT */ : \"dark\" /* DARK */;\nvar mediaQuery = typeof window !== \"undefined\" ? window.matchMedia(prefersLightMQ) : null;\nfunction ThemeProvider({\n  children,\n  specifiedTheme,\n  themeAction,\n  disableTransitionOnThemeChange = false\n}) {\n  const ensureCorrectTransition = useCorrectCssTransition({\n    disableTransitions: disableTransitionOnThemeChange\n  });\n  const [theme, setTheme] = useState(() => {\n    if (specifiedTheme) {\n      return themes.includes(specifiedTheme) ? specifiedTheme : null;\n    }\n    if (typeof window !== \"object\") return null;\n    return getPreferredTheme();\n  });\n  const [themeDefinedBy, setThemeDefinedBy] = useState(specifiedTheme ? \"USER\" : \"SYSTEM\");\n  const broadcastThemeChange = useBroadcastChannel(\"remix-themes\", (e) => {\n    ensureCorrectTransition(() => {\n      console.log(\"broadcastThemeChange\", disableTransitionOnThemeChange);\n      setTheme(e.data.theme);\n      setThemeDefinedBy(e.data.definedBy);\n    });\n  });\n  useEffect2(() => {\n    if (themeDefinedBy === \"USER\") {\n      return () => {\n      };\n    }\n    const handleChange = (ev) => {\n      ensureCorrectTransition(() => {\n        setTheme(ev.matches ? \"light\" /* LIGHT */ : \"dark\" /* DARK */);\n      });\n    };\n    mediaQuery == null ? void 0 : mediaQuery.addEventListener(\"change\", handleChange);\n    return () => mediaQuery == null ? void 0 : mediaQuery.removeEventListener(\"change\", handleChange);\n  }, [ensureCorrectTransition, themeDefinedBy]);\n  const handleThemeChange = useCallback3(\n    (value2) => {\n      const nextTheme = typeof value2 === \"function\" ? value2(theme) : value2;\n      if (nextTheme === null) {\n        const preferredTheme = getPreferredTheme();\n        ensureCorrectTransition(() => {\n          setTheme(preferredTheme);\n          setThemeDefinedBy(\"SYSTEM\");\n          broadcastThemeChange({ theme: preferredTheme, definedBy: \"SYSTEM\" });\n        });\n        fetch(`${themeAction}`, {\n          method: \"POST\",\n          body: JSON.stringify({ theme: null })\n        });\n      } else {\n        ensureCorrectTransition(() => {\n          setTheme(nextTheme);\n          setThemeDefinedBy(\"USER\");\n        });\n        broadcastThemeChange({ theme: nextTheme, definedBy: \"USER\" });\n        fetch(`${themeAction}`, {\n          method: \"POST\",\n          body: JSON.stringify({ theme: nextTheme })\n        });\n      }\n    },\n    [broadcastThemeChange, ensureCorrectTransition, theme, themeAction]\n  );\n  const value = useMemo(\n    () => [theme, handleThemeChange, { definedBy: themeDefinedBy }],\n    [theme, handleThemeChange, themeDefinedBy]\n  );\n  return /* @__PURE__ */ jsx(ThemeContext.Provider, { value, children });\n}\nvar clientThemeCode = String.raw`\n(() => {\n  const theme = window.matchMedia(${JSON.stringify(prefersLightMQ)}).matches\n    ? 'light'\n    : 'dark';\n  \n  const cl = document.documentElement.classList;\n  const dataAttr = document.documentElement.dataset.theme;\n\n  if (dataAttr != null) {\n    const themeAlreadyApplied = dataAttr === 'light' || dataAttr === 'dark';\n    if (!themeAlreadyApplied) {\n      document.documentElement.dataset.theme = theme;\n    }\n  } else {\n    const themeAlreadyApplied = cl.contains('light') || cl.contains('dark');\n    if (!themeAlreadyApplied) {\n      cl.add(theme);\n    }\n  }\n  \n  const meta = document.querySelector('meta[name=color-scheme]');\n  if (meta) {\n    if (theme === 'dark') {\n      meta.content = 'dark light';\n    } else if (theme === 'light') {\n      meta.content = 'light dark';\n    }\n  }\n})();\n`;\nfunction PreventFlashOnWrongTheme({\n  ssrTheme,\n  nonce\n}) {\n  const [theme] = useTheme();\n  return /* @__PURE__ */ jsxs(Fragment, { children: [\n    /* @__PURE__ */ jsx(\n      \"meta\",\n      {\n        name: \"color-scheme\",\n        content: theme === \"light\" ? \"light dark\" : \"dark light\"\n      }\n    ),\n    ssrTheme ? null : /* @__PURE__ */ jsx(\n      \"script\",\n      {\n        dangerouslySetInnerHTML: { __html: clientThemeCode },\n        nonce,\n        suppressHydrationWarning: true\n      }\n    )\n  ] });\n}\nfunction useTheme() {\n  const context = useContext(ThemeContext);\n  if (context === void 0) {\n    throw new Error(\"useTheme must be used within a ThemeProvider\");\n  }\n  return context;\n}\nfunction isTheme(value) {\n  return typeof value === \"string\" && themes.includes(value);\n}\n\n// src/theme-server.ts\nvar createThemeSessionResolver = (cookieThemeSession) => {\n  const resolver = async (request) => {\n    const session = await cookieThemeSession.getSession(\n      request.headers.get(\"Cookie\")\n    );\n    return {\n      getTheme: () => {\n        const themeValue = session.get(\"theme\");\n        return isTheme(themeValue) ? themeValue : null;\n      },\n      setTheme: (theme) => session.set(\"theme\", theme),\n      commit: () => cookieThemeSession.commitSession(session),\n      destroy: () => cookieThemeSession.destroySession(session)\n    };\n  };\n  return resolver;\n};\n\n// src/create-theme-action.ts\nvar createThemeAction = (themeSessionResolver) => {\n  const action = async ({ request }) => {\n    const session = await themeSessionResolver(request);\n    const { theme } = await request.json();\n    if (!theme) {\n      return Response.json(\n        { success: true },\n        { headers: { \"Set-Cookie\": await session.destroy() } }\n      );\n    }\n    if (!isTheme(theme)) {\n      return Response.json({\n        success: false,\n        message: `theme value of ${theme} is not a valid theme.`\n      });\n    }\n    session.setTheme(theme);\n    return Response.json(\n      { success: true },\n      {\n        headers: { \"Set-Cookie\": await session.commit() }\n      }\n    );\n  };\n  return action;\n};\nexport {\n  PreventFlashOnWrongTheme,\n  Theme,\n  ThemeProvider,\n  createThemeAction,\n  createThemeSessionResolver,\n  isTheme,\n  themes,\n  useTheme\n};\n"],
  "mappings": "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",
  "names": ["import_react", "useCallback2", "useEffect2", "useCallback3"]
}
